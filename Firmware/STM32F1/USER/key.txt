; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --execute_only --list --split_sections --debug -c --asm --interleave -o..\obj\key.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\key.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\KEY -I..\HARDWARE\TIMER -I..\SYSTEM\bsptime -I..\SYSTEM\IM1281B -I.\RTE\_PWM -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.4.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||i.KEY_Init||, CODE, EXECONLY, ALIGN=1

                  KEY_Init PROC
;;;18     //按键初始化函数
;;;19     void KEY_Init(void) //IO初始化
000000  b508              PUSH     {r3,lr}
;;;20     { 
;;;21      	GPIO_InitTypeDef GPIO_InitStructure;
;;;22      
;;;23      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOE,ENABLE);//使能PORTA,PORTE时钟
000002  2101              MOVS     r1,#1
000004  2044              MOVS     r0,#0x44
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;24     
;;;25     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4;//KEY0-KEY2
00000a  201c              MOVS     r0,#0x1c
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;26     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; //设置成上拉输入
000010  2048              MOVS     r0,#0x48
000012  f88d0003          STRB     r0,[sp,#3]
;;;27      	GPIO_Init(GPIOE, &GPIO_InitStructure);//初始化GPIOE2,3,4
000016  f44f50c0          MOV      r0,#0x1800
00001a  4669              MOV      r1,sp
00001c  f2c40001          MOVT     r0,#0x4001
000020  f7fffffe          BL       GPIO_Init
;;;28     
;;;29     	//初始化 WK_UP-->GPIOA.0	  下拉输入
;;;30     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;
000024  2001              MOVS     r0,#1
000026  f8ad0000          STRH     r0,[sp,#0]
;;;31     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //PA0设置成输入，默认下拉	  
00002a  2028              MOVS     r0,#0x28
00002c  f88d0003          STRB     r0,[sp,#3]
;;;32     	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.0
000030  f44f6000          MOV      r0,#0x800
000034  4669              MOV      r1,sp
000036  f2c40001          MOVT     r0,#0x4001
00003a  f7fffffe          BL       GPIO_Init
;;;33     
;;;34     }
00003e  bd08              POP      {r3,pc}
;;;35     //按键处理函数
                          ENDP


                          AREA ||i.KEY_Scan||, CODE, EXECONLY, ALIGN=1

                  KEY_Scan PROC
;;;43     //注意此函数有响应优先级,KEY0>KEY1>KEY2>KEY3!!
;;;44     u8 KEY_Scan(u8 mode)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;45     {	 
;;;46     	static u8 key_up=1;//按键按松开标志
;;;47     	if(mode)key_up=1;  //支持连按		  
000004  2601              MOVS     r6,#1
000006  f2400400          MOVW     r4,#:LOWER16: ||.data||
00000a  f2c00400          MOVT     r4,#:UPPER16: ||.data||
;;;48     	if(key_up&&(KEY0==0||KEY1==0||KEY2==0||WK_UP==1))
00000e  f44f6700          MOV      r7,#0x800
000012  f44f55c0          MOV      r5,#0x1800
000016  f2c40701          MOVT     r7,#0x4001
00001a  f2c40501          MOVT     r5,#0x4001
00001e  b108              CBZ      r0,|L2.36|
000020  7026              STRB     r6,[r4,#0]            ;47
000022  e001              B        |L2.40|
                  |L2.36|
000024  7820              LDRB     r0,[r4,#0]  ; key_up
000026  b1a0              CBZ      r0,|L2.82|
                  |L2.40|
000028  2110              MOVS     r1,#0x10
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       GPIO_ReadInputDataBit
000030  b1b0              CBZ      r0,|L2.96|
000032  2108              MOVS     r1,#8
000034  4628              MOV      r0,r5
000036  f7fffffe          BL       GPIO_ReadInputDataBit
00003a  b188              CBZ      r0,|L2.96|
00003c  2104              MOVS     r1,#4
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       GPIO_ReadInputDataBit
000044  b160              CBZ      r0,|L2.96|
000046  2101              MOVS     r1,#1
000048  4638              MOV      r0,r7
00004a  f7fffffe          BL       GPIO_ReadInputDataBit
00004e  2801              CMP      r0,#1
000050  d006              BEQ      |L2.96|
                  |L2.82|
;;;49     	{
;;;50     		delay_ms(10);//去抖动 
;;;51     		key_up=0;
;;;52     		if(KEY0==0)return KEY0_PRES;
;;;53     		else if(KEY1==0)return KEY1_PRES;
;;;54     		else if(KEY2==0)return KEY2_PRES;
;;;55     		else if(WK_UP==1)return WKUP_PRES;
;;;56     	}else if(KEY0==1&&KEY1==1&&KEY2==1&&WK_UP==0)key_up=1; 	    
000052  2110              MOVS     r1,#0x10
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       GPIO_ReadInputDataBit
00005a  2801              CMP      r0,#1
00005c  d024              BEQ      |L2.168|
00005e  e035              B        |L2.204|
                  |L2.96|
000060  200a              MOVS     r0,#0xa               ;50
000062  f7fffffe          BL       delay_ms
000066  2000              MOVS     r0,#0                 ;51
000068  7020              STRB     r0,[r4,#0]            ;51
00006a  2110              MOVS     r1,#0x10              ;52
00006c  4628              MOV      r0,r5                 ;52
00006e  f7fffffe          BL       GPIO_ReadInputDataBit
000072  b180              CBZ      r0,|L2.150|
000074  2108              MOVS     r1,#8                 ;53
000076  4628              MOV      r0,r5                 ;53
000078  f7fffffe          BL       GPIO_ReadInputDataBit
00007c  b170              CBZ      r0,|L2.156|
00007e  2104              MOVS     r1,#4                 ;54
000080  4628              MOV      r0,r5                 ;54
000082  f7fffffe          BL       GPIO_ReadInputDataBit
000086  b158              CBZ      r0,|L2.160|
000088  2101              MOVS     r1,#1                 ;55
00008a  4638              MOV      r0,r7                 ;55
00008c  f7fffffe          BL       GPIO_ReadInputDataBit
000090  2801              CMP      r0,#1                 ;55
000092  d007              BEQ      |L2.164|
000094  e01a              B        |L2.204|
                  |L2.150|
000096  2001              MOVS     r0,#1                 ;52
                  |L2.152|
;;;57      	return 0;// 无按键按下
;;;58     }
000098  e8bd81f0          POP      {r4-r8,pc}
                  |L2.156|
00009c  2002              MOVS     r0,#2                 ;53
00009e  e7fb              B        |L2.152|
                  |L2.160|
0000a0  2003              MOVS     r0,#3                 ;54
0000a2  e7f9              B        |L2.152|
                  |L2.164|
0000a4  2004              MOVS     r0,#4                 ;55
0000a6  e7f7              B        |L2.152|
                  |L2.168|
0000a8  2108              MOVS     r1,#8                 ;56
0000aa  4628              MOV      r0,r5                 ;56
0000ac  f7fffffe          BL       GPIO_ReadInputDataBit
0000b0  2801              CMP      r0,#1                 ;56
0000b2  d10b              BNE      |L2.204|
0000b4  2104              MOVS     r1,#4                 ;56
0000b6  4628              MOV      r0,r5                 ;56
0000b8  f7fffffe          BL       GPIO_ReadInputDataBit
0000bc  2801              CMP      r0,#1                 ;56
0000be  d105              BNE      |L2.204|
0000c0  2101              MOVS     r1,#1                 ;56
0000c2  4638              MOV      r0,r7                 ;56
0000c4  f7fffffe          BL       GPIO_ReadInputDataBit
0000c8  b900              CBNZ     r0,|L2.204|
0000ca  7026              STRB     r6,[r4,#0]            ;56
                  |L2.204|
0000cc  2000              MOVS     r0,#0                 ;57
0000ce  e7e3              B        |L2.152|
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  key_up
000000  01                DCB      0x01
