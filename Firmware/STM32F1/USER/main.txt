; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --execute_only --list --split_sections --debug -c --asm --interleave -o..\obj\main.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\main.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\KEY -I..\HARDWARE\TIMER -I..\SYSTEM\bsptime -I..\SYSTEM\IM1281B -I.\RTE\_PWM -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.4.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\main.crf main.c]
                          THUMB

                          AREA ||i.main||, CODE, EXECONLY, ALIGN=1

                          REQUIRE _printf_percent
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  main PROC
;;;6      
;;;7      int main(void)
000000  f44f60a0          MOV      r0,#0x500
;;;8      {
;;;9      	uint8_t len = 0,t;
;;;10     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); //设置NVIC中断分组2:2位抢占优先级，2位响应优先级
000004  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;11     	
;;;12     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);
000008  2101              MOVS     r1,#1
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;13     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);
000010  f44f7000          MOV      r0,#0x200
000014  2101              MOVS     r1,#1
000016  f2c00030          MOVT     r0,#0x30
00001a  f7fffffe          BL       GPIO_PinRemapConfig
;;;14     	
;;;15     	uart1_init(4800);
00001e  f44f5096          MOV      r0,#0x12c0
000022  f7fffffe          BL       uart1_init
;;;16     	uart2_init(115200);	 //串口初始化为115200
000026  f44f30e1          MOV      r0,#0x1c200
00002a  f7fffffe          BL       uart2_init
;;;17     	
;;;18     	init_bsptimer();
00002e  f7fffffe          BL       init_bsptimer
;;;19     	autotimer *mytimer = obtainTimer(0);
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       obtainTimer
;;;20     	TIM2_PWM_Init(719,9);	 //不分频。PWM频率=72000000/7200=10Khz
000038  2109              MOVS     r1,#9
00003a  f24020cf          MOV      r0,#0x2cf
00003e  f7fffffe          BL       TIM2_PWM_Init
000042  2400              MOVS     r4,#0
;;;21     	while(1){
;;;22     		printf("开始发送\r\n");
;;;23     		im1281b_ask();
;;;24     		printf("发送结束\r\n");
;;;25     		while(im1281b_analysis_data() == 0){
;;;26     		}
;;;27     		printf("收到回应:TEMP:%f\r\n",Temp_data*0.01);
000044  f2400500          MOVW     r5,#:LOWER16: Temp_data
000048  f2c00500          MOVT     r5,#:UPPER16: Temp_data
00004c  f241477b          MOV      r7,#0x147b
000050  f64728e1          MOV      r8,#0x7ae1
000054  f2c477ae          MOVT     r7,#0x47ae
000058  f6c37884          MOVT     r8,#0x3f84
;;;28     		USART1_RX_STA = 0;
00005c  f2400600          MOVW     r6,#:LOWER16: USART1_RX_STA
000060  f2c00600          MOVT     r6,#:UPPER16: USART1_RX_STA
                  |L1.100|
000064  f2400000          MOVW     r0,#:LOWER16: ||.conststring||;22
000068  f2c00000          MOVT     r0,#:UPPER16: ||.conststring||;22
00006c  f7fffffe          BL       __2printf
000070  f7fffffe          BL       im1281b_ask
000074  f2400000          MOVW     r0,#:LOWER16: ||.conststring||+12;24
000078  f2c00000          MOVT     r0,#:UPPER16: ||.conststring||+12;24
00007c  f7fffffe          BL       __2printf
                  |L1.128|
000080  f7fffffe          BL       im1281b_analysis_data
000084  2800              CMP      r0,#0                 ;25
000086  d0fb              BEQ      |L1.128|
000088  6828              LDR      r0,[r5,#0]            ;27  ; Temp_data
00008a  f7fffffe          BL       __aeabi_ui2d
00008e  463a              MOV      r2,r7                 ;27
000090  4643              MOV      r3,r8                 ;27
000092  f7fffffe          BL       __aeabi_dmul
000096  4602              MOV      r2,r0                 ;27
000098  460b              MOV      r3,r1                 ;27
00009a  f2400000          MOVW     r0,#:LOWER16: ||.conststring||+24;27
00009e  f2c00000          MOVT     r0,#:UPPER16: ||.conststring||+24;27
0000a2  f7fffffe          BL       __2printf
0000a6  8034              STRH     r4,[r6,#0]
;;;29     		delay_ms(100);
0000a8  2064              MOVS     r0,#0x64
0000aa  f7fffffe          BL       delay_ms
0000ae  e7d9              B        |L1.100|
;;;30     	}
;;;31     	
;;;32     	
;;;33     	while (1)
;;;34     	{
;;;35     		if (USART2_RX_STA & 0x8000)
;;;36     		{
;;;37     			len = USART2_RX_STA & 0x3fff; //得到此次接收到的数据长度
;;;38     			printf("收到包尾:\r\n");
;;;39     			uint16_t comp = (USART2_RX_BUF[0]-0x30)*100+(USART2_RX_BUF[1]-0x30)*10+(USART2_RX_BUF[2]-0x30);
;;;40     			printf("comp:%d\r\n",comp);
;;;41     			TIM_SetCompare1(TIM2,comp);
;;;42     			for (t = 0; t < len; t++)
;;;43     			{
;;;44     				USART_SendData(USART2, USART2_RX_BUF[t]); //向串口2发送数据
;;;45     				while (USART_GetFlagStatus(USART2, USART_FLAG_TC) != SET)
;;;46     					; //等待发送结束
;;;47     			}
;;;48     			printf("\r\n\r\n"); //插入换行
;;;49     			
;;;50     			
;;;51     			USART2_RX_STA = 0;
;;;52     		}
;;;53     		else
;;;54     		{
;;;55     			delay_ms(10);
;;;56     		}
;;;57     	}
;;;58     	//		TIM_SetCompare2(TIM3,led0pwmval);
;;;59     }
                          ENDP


                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  bfaacabc          DCB      191,170,202,188,183,162,203,205,"\r\n",0
000004  b7a2cbcd
000008  0d0a00  
00000b  00                DCB      0
00000c  b7a2cbcd          DCB      183,162,203,205,189,225,202,248,"\r\n",0
000010  bde1caf8
000014  0d0a00  
000017  00                DCB      0
000018  cad5b5bd          DCB      202,213,181,189,187,216,211,166,":TEMP:%f\r\n",0
00001c  bbd8d3a6
000020  3a54454d
000024  503a2566
000028  0d0a00  

                  __ARM_use_no_argv EQU 0
