; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --execute_only --list --split_sections --debug -c --asm --interleave -o..\obj\timer.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\timer.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\KEY -I..\HARDWARE\TIMER -I..\SYSTEM\bsptime -I..\SYSTEM\IM1281B -I.\RTE\_PWM -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.4.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\timer.crf ..\HARDWARE\TIMER\timer.c]
                          THUMB

                          AREA ||i.PwmControl||, CODE, EXECONLY, ALIGN=1

                  PwmControl PROC
;;;43     
;;;44     void PwmControl(bool bCon){
000000  b510              PUSH     {r4,lr}
;;;45         if(bCon){
;;;46             TIM_ForcedOC1Config(TIM2, TIM_ForcedAction_Active);
000002  f04f4480          MOV      r4,#0x40000000
000006  b148              CBZ      r0,|L1.28|
000008  2150              MOVS     r1,#0x50
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       TIM_ForcedOC1Config
;;;47             TIM_Cmd(TIM2, ENABLE);
000010  4620              MOV      r0,r4
000012  e8bd4010          POP      {r4,lr}
000016  2101              MOVS     r1,#1
000018  f7ffbffe          B.W      TIM_Cmd
                  |L1.28|
;;;48         }else{
;;;49             TIM_Cmd(TIM2, DISABLE);
00001c  2100              MOVS     r1,#0
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       TIM_Cmd
;;;50             TIM_ForcedOC1Config(TIM2, TIM_ForcedAction_InActive);   //设置为非活动状态，低电平
000024  4620              MOV      r0,r4
000026  e8bd4010          POP      {r4,lr}
00002a  2140              MOVS     r1,#0x40
00002c  f7ffbffe          B.W      TIM_ForcedOC1Config
;;;51         }
;;;52     }
                          ENDP


                          AREA ||i.TIM2_PWM_Init||, CODE, EXECONLY, ALIGN=1

                  TIM2_PWM_Init PROC
;;;5      //psc：时钟预分频数
;;;6      void TIM2_PWM_Init(u16 arr,u16 psc)
000000  b570              PUSH     {r4-r6,lr}
;;;7      {  
000002  4604              MOV      r4,r0
;;;8      	GPIO_InitTypeDef GPIO_InitStructure;
;;;9      	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;10     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;11     	
;;;12     	TIM_DeInit(TIM2);//将外设 TIMx 寄存器重设为缺省值
000004  f04f4680          MOV      r6,#0x40000000
000008  b088              SUB      sp,sp,#0x20           ;7
00000a  460d              MOV      r5,r1                 ;7
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       TIM_DeInit
;;;13     	
;;;14     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);	//使能定时器2时钟
000012  2101              MOVS     r1,#1
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;15      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA  | RCC_APB2Periph_AFIO, ENABLE);  //使能GPIO外设和AFIO复用功能模块时钟
00001a  2101              MOVS     r1,#1
00001c  2005              MOVS     r0,#5
00001e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;16     	
;;;17     	GPIO_PinRemapConfig(GPIO_FullRemap_TIM2, ENABLE);       //TIM2 Remap CH1->PA15 
000022  f44f7040          MOV      r0,#0x300
000026  2101              MOVS     r1,#1
000028  f2c00018          MOVT     r0,#0x18
00002c  f7fffffe          BL       GPIO_PinRemapConfig
;;;18      
;;;19     	//设置该引脚为复用输出功能,输出TIM2_CH1的PWM脉冲波形	GPIOA.15
;;;20     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15; //TIM2_CH1_ETR
000030  13f0              ASRS     r0,r6,#15
000032  f8ad001c          STRH     r0,[sp,#0x1c]
;;;21     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  //复用推挽输出
000036  2018              MOVS     r0,#0x18
000038  f88d001f          STRB     r0,[sp,#0x1f]
;;;22     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00003c  2003              MOVS     r0,#3
00003e  f88d001e          STRB     r0,[sp,#0x1e]
;;;23     	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIO
000042  f44f6000          MOV      r0,#0x800
000046  a907              ADD      r1,sp,#0x1c
000048  f2c40001          MOVT     r0,#0x4001
00004c  f7fffffe          BL       GPIO_Init
;;;24      
;;;25     	//初始化TIM2
;;;26     	TIM_TimeBaseStructure.TIM_Period = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值
000050  f8ad4004          STRH     r4,[sp,#4]
;;;27     	TIM_TimeBaseStructure.TIM_Prescaler = psc; //设置用来作为TIMx时钟频率除数的预分频值 
;;;28     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim
000054  2400              MOVS     r4,#0
000056  f8ad5000          STRH     r5,[sp,#0]            ;27
00005a  f8ad4006          STRH     r4,[sp,#6]
;;;29     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
00005e  f8ad4002          STRH     r4,[sp,#2]
;;;30     	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure); //根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位
000062  4669              MOV      r1,sp
000064  4630              MOV      r0,r6
000066  f7fffffe          BL       TIM_TimeBaseInit
;;;31     	
;;;32     	//初始化TIM2 Channel1 PWM模式	 
;;;33     	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2; //选择定时器模式:TIM脉冲宽度调制模式2
00006a  2070              MOVS     r0,#0x70
00006c  f8ad000c          STRH     r0,[sp,#0xc]
;;;34      	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; //比较输出使能
000070  2001              MOVS     r0,#1
000072  f8ad000e          STRH     r0,[sp,#0xe]
;;;35     	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; //输出极性:TIM输出比较极性高
000076  f8ad4014          STRH     r4,[sp,#0x14]
;;;36     	//TIM_OCInitStructure.TIM_Pulse = 1;//设置了待装入捕获比较寄存器的脉冲值
;;;37     	TIM_OC1Init(TIM2, &TIM_OCInitStructure);  //根据指定的参数初始化外设
00007a  a903              ADD      r1,sp,#0xc
00007c  4630              MOV      r0,r6
00007e  f7fffffe          BL       TIM_OC1Init
;;;38     
;;;39     	TIM_OC1PreloadConfig(TIM2, TIM_OCPreload_Enable);  //使能TIM2在CCR2上的预装载寄存器
000082  2108              MOVS     r1,#8
000084  4630              MOV      r0,r6
000086  f7fffffe          BL       TIM_OC1PreloadConfig
;;;40      
;;;41     	TIM_Cmd(TIM2, ENABLE);  //使能TIM2
00008a  2101              MOVS     r1,#1
00008c  4630              MOV      r0,r6
00008e  f7fffffe          BL       TIM_Cmd
;;;42     }
000092  b008              ADD      sp,sp,#0x20
000094  bd70              POP      {r4-r6,pc}
;;;43     
                          ENDP

